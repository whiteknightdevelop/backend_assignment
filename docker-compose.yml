version: "3.9"
services:
    mongodb:
        image: mongo:latest
        container_name: mongodb
        restart: unless-stopped
        command: mongod --auth
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: 1234
            MONGO_INITDB_DATABASE: currencies_db
            MONGODB_DATA_DIR: /data/db
            MONDODB_LOG_DIR: /dev/null
        volumes:
            - mongodbdata:/data/db
        ports:
            - 27017:27017
        networks:
            - main
    zookeeper:
        container_name: zookeeper
        image: bitnami/zookeeper:latest
        build:
            context: ./
            dockerfile: ./kafka/zookeeper/Dockerfile
        # build:
        #     context: ./zookeeper
        volumes:
            - ./kafka/config/zookeeper.properties:/kafka/config/zookeeper.properties
            # - ~/kafka/data/zookeeper_data:/var/lib/zookeeper/data
            # - ~/kafka/data/zookeeper_log:/var/lib/zookeeper/log
        ports:
            - "2181:2181"
        networks:
            - main
    kafka:
        container_name: kafka
        image: bitnami/kafka:latest
        build:
            context: ./
            dockerfile: ./kafka/Dockerfile
        # build: 
        #     context: .
        volumes:
            - ./kafka/config/server.properties:/kafka/config/server.properties
            # - ./data/kafka/:/tmp/kafka-logs/
        ports:
            - "9092:9092"
        networks:
            - main
        depends_on:
            - zookeeper
    publicapi:
        container_name: publicapi
        build:
            context: ./
            dockerfile: ./api-app/Dockerfile
        image: python-api-app
        ports:
            - "8000:8000"
        networks:
            - main
    processor:
        container_name: processor
        build:
            context: ./
            dockerfile: ./processor-app/Dockerfile
        image: python-processor-app
        ports:
            - "6379:6379"
        networks:
            - main
        depends_on:
            - publicapi
            - mongodb
    alerts:
        container_name: alerts
        build:
            context: ./
            dockerfile: ./alerts-app/Dockerfile
        image: python-alerts-app
        ports:
            - "6165:6165"
        networks:
            - main
        depends_on:
            - mongodb
            - zookeeper
            - kafka
networks:
    main:
        driver: bridge
volumes:
    mongodbdata:
        external: false

